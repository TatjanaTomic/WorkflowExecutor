<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Plava verzija - gora nego ljubicasta -->
    <!--<SolidColorBrush x:Key="DeepDarkColorBrush" Color="#293241"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#3d5a80"/>
    <SolidColorBrush x:Key="ButtonDarkColor" Color="#ee6c4d"/>
    <SolidColorBrush x:Key="ButtonLightColor" Color="Silver"/>-->
    
    <!--Ljubicasta verzija-->
    <SolidColorBrush x:Key="DeepDarkColorBrush" Color="#1F1D36"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#47395c"/>
    <SolidColorBrush x:Key="ButtonDarkColor" Color="#864879"/>
    <SolidColorBrush x:Key="ButtonLightColor" Color="Silver"/>

    <!--Testne verzije-->
    <!--<SolidColorBrush x:Key="DeepDarkColorBrush" Color="#1e0233"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#895575"/>
    <SolidColorBrush x:Key="DeepDarkColorBrush" Color="#a478b8"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#e0c2f2"/>
    <SolidColorBrush x:Key="DeepDarkColorBrush" Color="#3e1747"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#623b72"/>
    <SolidColorBrush x:Key="DarkColorBrush" Color="#a478b8"/>-->


    <!-- Plava verzija - gora nego ljubicasta -->
    <!--<SolidColorBrush x:Key="TextLightColorBrush" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="TextDarkColorBrush" Color="#293241"/>-->
    
    <!--Ljubicasta verzija-->
    <SolidColorBrush x:Key="TextLightColorBrush" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="TextDarkColorBrush" Color="#1F1D36"/>

    <!--Testne verzije-->
    <!--<SolidColorBrush x:Key="TextLightColorBrush" Color="#1e0233"/>
    <SolidColorBrush x:Key="TextDarkColorBrush" Color="#e7d3cc"/>
    <SolidColorBrush x:Key="TextLightColorBrush" Color="#e7d3cc"/>
    <SolidColorBrush x:Key="TextDarkColorBrush" Color="#3e1747"/>-->


    <Style TargetType="Button" x:Key="PurpleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonDarkColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource TextLightColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonLightColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TextLightColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ButtonDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="TabItem" x:Key="TabItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource DeepDarkColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource DarkColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <BitmapImage x:Key="UploadIcon" UriSource="../Icons/upload.png" ></BitmapImage>
    <BitmapImage x:Key="DownloadIcon" UriSource="../Icons/download.png" ></BitmapImage>
    <BitmapImage x:Key="ExecuteIcon"  UriSource="../Icons/execute.png" ></BitmapImage>


    <!--<LinearGradientBrush x:Key="Horizontal_Gradient" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Vertical_Gradient" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#AAA" Offset="1.0"/>
    </LinearGradientBrush>
    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="LightBrush">
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="1.0"/>
    </LinearGradientBrush>
    <Style x:Key="CheckBoxS" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    --><!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content --><!--
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Border x:Name="Border" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource Stroke_Gradient}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1"/>
                                <Path x:Name="CheckMark" Stroke="{DynamicResource Normal_Background}" StrokeThickness="3" SnapsToDevicePixels="False" Data="M1.5000001,1.5833334 L9.7920001,9.6666667 M1.5420001,9.6666667 L9.7083333,1.5000001" Margin="0.875,0.895,0.833,0.938" ClipToBounds="False" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    --><!-- This uses Visibility to hide and show the CheckMark on IsChecked --><!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckMark"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource Vertical_Gradient}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <Style TargetType="CheckBox" x:Key="CircleCheckbox">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
                                Width="20" 
                                Height="20" 
                                CornerRadius="0" 
                                Background="Silver"
                                BorderThickness="1"
                                BorderBrush="Gray">
                            <Path 
                                Width="7" Height="7" 
                                x:Name="CheckMark"
                                SnapsToDevicePixels="False" 
                                Stroke="Purple"
                                StrokeThickness="1" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="0,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Cursor" Value="Arrow"></Setter>
                            <Setter Property="Background" Value="Gray" TargetName="Border"/>
                            <Setter Property="Foreground" Value="Gray"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>